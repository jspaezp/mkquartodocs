[tool.poetry]
name = "mkquartodocs"
version = "0.5.10"
description = ""
authors = ["J. Sebastian Paez <jspaezp@users.noreply.github.com>"]
readme = "README.md"
packages = [{ include = "mkquartodocs" }]
license = "Apache 2.0"

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
mkdocs = "^1.6.0"
jupyter = "^1.0.0"
nbformat = "^5.7.3"
pytest-cov = "^4.0.0"

[tool.poetry.group.check.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
pylint = "^2.16.2"
ruff = "^0.5.5"

[tool.poetry.group.dev.dependencies]
pydocstringformatter = "^0.7.2"
pyupgrade = "^2.37.3"
pytest-datadir = "^1.3.1"
pytest = "^8.3.1"
pytest-cov = "^4.0.0"
mdformat = "^0.7.16"
mdformat-black = "^0.1.1"
mdformat-config = "^0.1.3"
mdformat-beautysh = "^0.1.1"
mdformat_frontmatter = "^0.4.1"


[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.33"
mkdocs-autorefs = "^1.1.0"
mkdocstrings = { extras = ["python"], version = "^0.25.2" }


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.plugins."mkdocs.plugins"]
"mkquartodocs" = "mkquartodocs.plugin:MkQuartoDocsPlugin"
# Equivalent to:
# entry_points={
#     'mkdocs.plugins': [
#         'pluginname = path.to.some_plugin:SomePluginClass',
#     ]
# }

[tool.black]
target-version = ["py38"]
line-length = 88

[tool.isort]
profile = "black"

[tool.pydocstyle]
convention = "google"
add-ignore = "D102,D101,D100,D105,D107,D104"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --cov=mkquartodocs"
doctest_plus = "enabled"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = ["tests", "mkquartodocs"]


[tool.pydocstringformatter]
style = "numpydoc"
exclude = [".tox/**"]
max-line-length = 88

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310}
skip_missing_interpreters = True
skipsdist = True
isolated_build = True
[testenv]
deps =
    pytest
    pytest-cov
allowlist_externals =
    poetry
    quarto
commands_pre =
    poetry install
commands =
    poetry run pytest tests/ --import-mode importlib
"""

[tool.pylint]
load-plugins = 'pylint.extensions.docparams'

[tool.pylint.format]
max-line-length = 88
